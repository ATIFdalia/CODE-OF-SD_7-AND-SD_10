# SD7
set.seed(560)
x1 <- rnorm(1000, 3, 1)
# x2, x3, and x4 in a matrix, these will be modified to meet the criteria
x234 <- scale(matrix( rnorm(3000), ncol=3 ))
# put all into 1 matrix for simplicity
x1234 <- cbind(scale(x1),x234)
# find the current correlation matrix
c1 <- var(x1234)
# cholesky decomposition to get independence
chol1 <- solve(chol(c1))
newx <-  x1234 %*% chol1
# check that we have independence and x1 unchanged
zapsmall(cor(newx))
all.equal( x1234[,1], newx[,1] )
# create new correlation structure (zeros can be replaced with other rvals)
newc <-matrix( c(1  , 0.7, 0.36, 0.45,  0.7, 1  , 0.13  , 0  ,0.36, 0.13  , 1  , 0.42  , 0.45, 0.42  , 0  , 1  ), ncol=4 )
# check that it is positive definite
eigen(newc)
chol2 <- chol(newc)
finalx <- newx %*% chol2 * sd(x1) + mean(x1)
# verify success
mean(x1)
colMeans(finalx)
sd(x1)
apply(finalx, 2, sd)
zapsmall(cor(finalx))
pairs(finalx)
all.equal(x1, finalx[,1])
v1<-finalx[,2]
x2<-finalx[,2]
x3<-finalx[,3]
x4<-finalx[,4]
set.seed(2003)
n<-1000
x5 = rbinom(n,1,prob=.5)
x6<-rbinom(n,1,prob=.7)
NumA = sum(x5== x6)
x7 = character(1000)
x7[x5 == x6] = sample(c("1"), NumA, replace=TRUE)
x7[x5 != x6 ] = sample(c("0"), 1000-NumA,    prob=c(0.9),  replace=TRUE)
x8<-rbinom(n,1,prob=.9)
x9<-rbinom(n,1,prob=.95)
NumA = sum(x8== x9)
x10 = character(1000)
x10[x8 == x9] = sample(c("1"), NumA, replace=TRUE)
x10[x8 != x9 ] = sample(c("0"), 1000-NumA,    prob=c(0.8),  replace=TRUE)
x11<-rbinom(n,1,prob=.65)
x12<-rbinom(n,1,prob=.6)
x13<-rbinom(n,1,prob=.7)
x14<-rbinom(n,1,prob=.8)
x15<-rnorm(n,0,1)
x16<-rnorm(n,-10,1)
x17<-rnorm(n,2,1)
x18<-rnorm(n,0,1)
x19<-rnorm(n,-3,1)
x20<-rnorm(n,0,1)
mydata<-data.frame(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20)
str(mydata)
Indic<-c(5,6,8,9,11,12,13,14)
for(i in 1:8){mydata[,Indic[i]]<-factor(mydata[,Indic[i]])}
str(mydata)
alpha<-exp(-27+3*x1+2.5*x2+1.5*x17)/(1+exp(-27+3*x1+2.5*x2+1.5*x17))
y<-rbinom(n,1,prob=alpha)
reg<-glm(y~x1+x2+x17,data=mydata,family=binomial)
summary(reg)
mydata2<-data.frame(y,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20)
table(mydata2$y)
prop.table(table(mydata2$y))
#write.csv(mydata2,"C:\\Users\\BOUKA\\Special Issue Paper\\SD_7test.csv", row.names = FALSE)

#################################################################
#SD10
set.seed(560)
x1 <- rnorm(1000, 3, 1)
# x2, x3, and x4 in a matrix, these will be modified to meet the criteria
x234 <- scale(matrix( rnorm(3000), ncol=3 ))
# put all into 1 matrix for simplicity
x1234 <- cbind(scale(x1),x234)
# find the current correlation matrix
c1 <- var(x1234)
# cholesky decomposition to get independence
chol1 <- solve(chol(c1))
newx <-  x1234 %*% chol1
# check that we have independence and x1 unchanged
zapsmall(cor(newx))
all.equal( x1234[,1], newx[,1] )
# create new correlation structure (zeros can be replaced with other rvals)
newc <-matrix( c(1  , 0.7, 0.36, 0.45,  0.7, 1  , 0.13  , 0  ,0.36, 0.13  , 1  , 0.42  , 0.45, 0.42  , 0  , 1  ), ncol=4 )
# check that it is positive definite
eigen(newc)
chol2 <- chol(newc)
finalx <- newx %*% chol2 * sd(x1) + mean(x1)
# verify success
mean(x1)
colMeans(finalx)
sd(x1)
apply(finalx, 2, sd)
zapsmall(cor(finalx))
pairs(finalx)
all.equal(x1, finalx[,1])
v1<-finalx[,2]
x2<-finalx[,2]
x3<-finalx[,3]
x4<-finalx[,4]
set.seed(2003)
n<-1000
x5 = rbinom(n,1,prob=.5)
x6<-rbinom(n,1,prob=.7)
NumA = sum(x5== x6)
x7 = character(1000)
x7[x5 == x6] = sample(c("1"), NumA, replace=TRUE)
x7[x5 != x6 ] = sample(c("0"), 1000-NumA,    prob=c(0.9),  replace=TRUE)
x8<-rbinom(n,1,prob=.9)
x9<-rbinom(n,1,prob=.95)
NumA = sum(x8== x9)
x10 = character(1000)
x10[x8 == x9] = sample(c("1"), NumA, replace=TRUE)
x10[x8 != x9 ] = sample(c("0"), 1000-NumA,    prob=c(0.8),  replace=TRUE)
x11<-rbinom(n,1,prob=.65)
x12<-rbinom(n,1,prob=.6)
x13<-rbinom(n,1,prob=.7)
x14<-rbinom(n,1,prob=.8)
x15<-rnorm(n,0,1)
x16<-rnorm(n,-10,1)
x17<-rnorm(n,2,1)
x18<-rnorm(n,0,1)
x19<-rnorm(n,-3,1)
x20<-rnorm(n,0,1)
mydata<-data.frame(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20)
str(mydata)
Indic<-c(5,6,8,9,11,12,13,14)
for(i in 1:8){mydata[,Indic[i]]<-factor(mydata[,Indic[i]])}
str(mydata)
alpha<-exp(-27+4*x1+1.5*x2+1.75*x17)/(1+exp(-27+4*x1+1.5*x2+1.75*x17))
y<-rbinom(n,1,prob=alpha)
reg<-glm(y~x1+x2+x17,data=mydata,family=binomial)
summary(reg)
mydata2<-data.frame(y,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20)
table(mydata2$y)
prop.table(table(mydata2$y))

####################################################################################################
# THE FOLLOWING CODE GENERATES 8.2% IMBALANCE RATION IN THE DATA(N=1000, FEATURES NUMBER=20)

set.seed(104)
x1 <- rnorm(1000, 3, 1)
# x2, x3, and x4 in a matrix, these will be modified to meet the criteria
x234 <- scale(matrix( rnorm(3000), ncol=3 ))
# put all into 1 matrix for simplicity
x1234 <- cbind(scale(x1),x234)
# find the current correlation matrix
c1 <- var(x1234)
# cholesky decomposition to get independence
chol1 <- solve(chol(c1))
newx <-  x1234 %*% chol1
# check that we have independence and x1 unchanged
zapsmall(cor(newx))
all.equal( x1234[,1], newx[,1] )
# create new correlation structure (zeros can be replaced with other rvals)
newc <-matrix( c(1  , 0.4, 0.45, 0.7,  0.4, 1  , 0.12  , 0  ,0.45, 0.12  , 1  , 0.1 , 0.7, 0  , 0.1  , 1  ), ncol=4 )
# check that it is positive definite
eigen(newc)
chol2 <- chol(newc)
finalx <- newx %*% chol2 * sd(x1) + mean(x1)
# verify success
mean(x1)
colMeans(finalx)
sd(x1)
apply(finalx, 2, sd)
zapsmall(cor(finalx))
pairs(finalx)
all.equal(x1, finalx[,1])
v1<-finalx[,2]
x2<-finalx[,2]
x3<-finalx[,3]
x4<-finalx[,4]
set.seed(2022)
n<-1000
x5 = rbinom(n,1,prob=.5)
x6<-rbinom(n,1,prob=.7)
NumA = sum(x5== x6)
x7 = character(1000)
x7[x5 == x6] = sample(c("1"), NumA, replace=TRUE)
x7[x5 != x6 ] = sample(c("0"), 1000-NumA,    prob=c(0.9),  replace=TRUE)
x8<-rbinom(n,1,prob=.9)
x9<-rbinom(n,1,prob=.95)
NumA = sum(x8== x9)
x10 = character(1000)
x10[x8 == x9] = sample(c("1"), NumA, replace=TRUE)
x10[x8 != x9 ] = sample(c("0"), 1000-NumA,    prob=c(0.8),  replace=TRUE)
x11<-rbinom(n,1,prob=.65)
x12<-rbinom(n,1,prob=.6)
x13<-rbinom(n,1,prob=.7)
x14<-rbinom(n,1,prob=.8)
x15<-rnorm(n,0,1)
x16<-rnorm(n,-10,1)
x17<-rnorm(n,2,1)
x18<-rnorm(n,0,1)
x19<-rnorm(n,-3,1)
x20<-rnorm(n,0,1)
mydata<-data.frame(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20)
str(mydata)
Indic<-c(5,6,8,9,11,12,13,14)
for(i in 1:8){mydata[,Indic[i]]<-factor(mydata[,Indic[i]])}
str(mydata)
alpha<-exp(-27+3*x1+2.5*x2+1.55*x17)/(1+exp(-27+3*x1+2.5*x2+1.55*x17))
y<-rbinom(n,1,prob=alpha)
reg<-glm(y~x1+x2+x17,data=mydata,family=binomial)
summary(reg)
mydata2<-data.frame(y,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20)
table(mydata2$y)
prop.table(table(mydata2$y))



